// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Okussakula.Model;

namespace Okussakula.Model.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20211219221655_test")]
    partial class test
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Okussakula.Model.Data.Administrator", b =>
                {
                    b.Property<long>("AdministratorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateInsert")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("InstituitionId")
                        .HasColumnType("bigint");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AdministratorId");

                    b.HasIndex("InstituitionId");

                    b.ToTable("Administrators");
                });

            modelBuilder.Entity("Okussakula.Model.Data.Consult", b =>
                {
                    b.Property<long>("ConsultId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ConsultHorarioId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DataInsert")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("ConsultId");

                    b.HasIndex("ConsultHorarioId");

                    b.HasIndex("UserId");

                    b.ToTable("Consults");
                });

            modelBuilder.Entity("Okussakula.Model.Data.ConsultHorario", b =>
                {
                    b.Property<long>("ConsultHorarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CronogramConsultId")
                        .HasColumnType("bigint");

                    b.Property<int>("Hora")
                        .HasColumnType("int");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.HasKey("ConsultHorarioId");

                    b.HasIndex("CronogramConsultId");

                    b.ToTable("ConsultHorarios");
                });

            modelBuilder.Entity("Okussakula.Model.Data.CronogramConsult", b =>
                {
                    b.Property<long>("CronogramConsultId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<long>("InstituitionSpecialityId")
                        .HasColumnType("bigint");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Preco")
                        .HasColumnType("float");

                    b.HasKey("CronogramConsultId");

                    b.HasIndex("InstituitionSpecialityId");

                    b.ToTable("CronogramConsults");
                });

            modelBuilder.Entity("Okussakula.Model.Data.CronogramExam", b =>
                {
                    b.Property<long>("CronogramExamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<long>("InstituitionExamId")
                        .HasColumnType("bigint");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Preco")
                        .HasColumnType("float");

                    b.HasKey("CronogramExamId");

                    b.HasIndex("InstituitionExamId");

                    b.ToTable("CronogramExams");
                });

            modelBuilder.Entity("Okussakula.Model.Data.Exam", b =>
                {
                    b.Property<long>("ExamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("InstituitionId")
                        .HasColumnType("bigint");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.HasKey("ExamId");

                    b.HasIndex("InstituitionId");

                    b.ToTable("Exams");
                });

            modelBuilder.Entity("Okussakula.Model.Data.ExamHorario", b =>
                {
                    b.Property<long>("ExamHorarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CronogramExamId")
                        .HasColumnType("bigint");

                    b.Property<int>("Hora")
                        .HasColumnType("int");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.HasKey("ExamHorarioId");

                    b.HasIndex("CronogramExamId");

                    b.ToTable("ExamHorarios");
                });

            modelBuilder.Entity("Okussakula.Model.Data.ExamMedic", b =>
                {
                    b.Property<long>("ExamMedicId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataInsert")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<long>("ExamHorarioId")
                        .HasColumnType("bigint");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("ExamMedicId");

                    b.HasIndex("ExamHorarioId");

                    b.HasIndex("UserId");

                    b.ToTable("ExamMedics");
                });

            modelBuilder.Entity("Okussakula.Model.Data.Instituition", b =>
                {
                    b.Property<long>("InstituitionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateInsert")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Endereco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("NIF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InstituitionId");

                    b.ToTable("Instituitions");
                });

            modelBuilder.Entity("Okussakula.Model.Data.InstituitionExam", b =>
                {
                    b.Property<long>("InstituitionExamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ExamId")
                        .HasColumnType("bigint");

                    b.Property<long>("InstituitionId")
                        .HasColumnType("bigint");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.HasKey("InstituitionExamId");

                    b.HasIndex("ExamId");

                    b.HasIndex("InstituitionId");

                    b.ToTable("InstituitionExams");
                });

            modelBuilder.Entity("Okussakula.Model.Data.InstituitionSpeciality", b =>
                {
                    b.Property<long>("InstituitionSpecialityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("InstituitionId")
                        .HasColumnType("bigint");

                    b.Property<long>("SpecialityId")
                        .HasColumnType("bigint");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.HasKey("InstituitionSpecialityId");

                    b.HasIndex("InstituitionId");

                    b.HasIndex("SpecialityId");

                    b.ToTable("InstituitionSpecialities");
                });

            modelBuilder.Entity("Okussakula.Model.Data.Speciality", b =>
                {
                    b.Property<long>("SpecialityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("InstituitionId")
                        .HasColumnType("bigint");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.HasKey("SpecialityId");

                    b.HasIndex("InstituitionId");

                    b.ToTable("Specialities");
                });

            modelBuilder.Entity("Okussakula.Model.Data.User", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BI")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateInsert")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Okussakula.Model.Data.Administrator", b =>
                {
                    b.HasOne("Okussakula.Model.Data.Instituition", "Instituition")
                        .WithMany("Administrators")
                        .HasForeignKey("InstituitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instituition");
                });

            modelBuilder.Entity("Okussakula.Model.Data.Consult", b =>
                {
                    b.HasOne("Okussakula.Model.Data.ConsultHorario", "ConsultHorario")
                        .WithMany()
                        .HasForeignKey("ConsultHorarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Okussakula.Model.Data.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ConsultHorario");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Okussakula.Model.Data.ConsultHorario", b =>
                {
                    b.HasOne("Okussakula.Model.Data.CronogramConsult", "CronogramConsult")
                        .WithMany()
                        .HasForeignKey("CronogramConsultId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CronogramConsult");
                });

            modelBuilder.Entity("Okussakula.Model.Data.CronogramConsult", b =>
                {
                    b.HasOne("Okussakula.Model.Data.InstituitionSpeciality", "InstituitionSpeciality")
                        .WithMany()
                        .HasForeignKey("InstituitionSpecialityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InstituitionSpeciality");
                });

            modelBuilder.Entity("Okussakula.Model.Data.CronogramExam", b =>
                {
                    b.HasOne("Okussakula.Model.Data.InstituitionExam", "InstituitionExam")
                        .WithMany()
                        .HasForeignKey("InstituitionExamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InstituitionExam");
                });

            modelBuilder.Entity("Okussakula.Model.Data.Exam", b =>
                {
                    b.HasOne("Okussakula.Model.Data.Instituition", null)
                        .WithMany("Exams")
                        .HasForeignKey("InstituitionId");
                });

            modelBuilder.Entity("Okussakula.Model.Data.ExamHorario", b =>
                {
                    b.HasOne("Okussakula.Model.Data.CronogramExam", "CronogramExam")
                        .WithMany()
                        .HasForeignKey("CronogramExamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CronogramExam");
                });

            modelBuilder.Entity("Okussakula.Model.Data.ExamMedic", b =>
                {
                    b.HasOne("Okussakula.Model.Data.ExamHorario", "ExamHorario")
                        .WithMany()
                        .HasForeignKey("ExamHorarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Okussakula.Model.Data.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExamHorario");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Okussakula.Model.Data.InstituitionExam", b =>
                {
                    b.HasOne("Okussakula.Model.Data.Exam", "Exam")
                        .WithMany()
                        .HasForeignKey("ExamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Okussakula.Model.Data.Instituition", "Instituition")
                        .WithMany()
                        .HasForeignKey("InstituitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exam");

                    b.Navigation("Instituition");
                });

            modelBuilder.Entity("Okussakula.Model.Data.InstituitionSpeciality", b =>
                {
                    b.HasOne("Okussakula.Model.Data.Instituition", "Instituition")
                        .WithMany()
                        .HasForeignKey("InstituitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Okussakula.Model.Data.Speciality", "Speciality")
                        .WithMany()
                        .HasForeignKey("SpecialityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instituition");

                    b.Navigation("Speciality");
                });

            modelBuilder.Entity("Okussakula.Model.Data.Speciality", b =>
                {
                    b.HasOne("Okussakula.Model.Data.Instituition", null)
                        .WithMany("Specialities")
                        .HasForeignKey("InstituitionId");
                });

            modelBuilder.Entity("Okussakula.Model.Data.Instituition", b =>
                {
                    b.Navigation("Administrators");

                    b.Navigation("Exams");

                    b.Navigation("Specialities");
                });
#pragma warning restore 612, 618
        }
    }
}
